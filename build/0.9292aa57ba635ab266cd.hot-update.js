webpackHotUpdate(0,{

/***/ 697:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(17);\n\nvar _propTypes = __webpack_require__(5);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _newLikeThunk = __webpack_require__(346);\n\nvar _newLikeThunk2 = _interopRequireDefault(_newLikeThunk);\n\nvar _newCommentThunk = __webpack_require__(723);\n\nvar _newCommentThunk2 = _interopRequireDefault(_newCommentThunk);\n\nvar _newCommentLikeThunk = __webpack_require__(722);\n\nvar _newCommentLikeThunk2 = _interopRequireDefault(_newCommentLikeThunk);\n\nvar _joinConversationThunk = __webpack_require__(721);\n\nvar _joinConversationThunk2 = _interopRequireDefault(_joinConversationThunk);\n\nvar _Post_Comment = __webpack_require__(695);\n\nvar _Post_Comment2 = _interopRequireDefault(_Post_Comment);\n\n__webpack_require__(135);\n\nvar _semanticUiReact = __webpack_require__(24);\n\nvar _firebase = __webpack_require__(76);\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _v = __webpack_require__(136);\n\nvar _v2 = _interopRequireDefault(_v);\n\nvar _underscore = __webpack_require__(330);\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _jquery = __webpack_require__(1373);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _Nested_Post_Modal = __webpack_require__(694);\n\nvar _Nested_Post_Modal2 = _interopRequireDefault(_Nested_Post_Modal);\n\nvar _reactInfiniteScroller = __webpack_require__(299);\n\nvar _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ModalInstance = function (_React$Component) {\n  _inherits(ModalInstance, _React$Component);\n\n  function ModalInstance(props) {\n    _classCallCheck(this, ModalInstance);\n\n    var _this = _possibleConstructorReturn(this, (ModalInstance.__proto__ || Object.getPrototypeOf(ModalInstance)).call(this, props));\n\n    _this.state = {\n      commentBody: '',\n      messages: [],\n      hitBottom: false,\n      c: 0,\n      // TODO conversation.filter((conv) => conv._id === this.props.postData._id).length > 0\n      isInConversation: false\n    };\n    _this.scrollToBottom = _this.scrollToBottom.bind(_this);\n    return _this;\n  }\n\n  _createClass(ModalInstance, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var membersRef = _firebase2.default.database().ref('/members/' + this.props.postData.postId);\n      membersRef.on('value', function (snapshot) {\n        var peeps = _underscore2.default.values(snapshot.val());\n        var members = peeps.filter(function (peep) {\n          return peep;\n        });\n        _this2.setState({ members: members.length });\n      });\n      var countRef = _firebase2.default.database().ref('/counts/' + this.props.postData.postId + '/count');\n      countRef.on('value', function (snapshot) {\n        _this2.setState({ count: snapshot.val() });\n      });\n    }\n  }, {\n    key: 'scrollToBottom',\n    value: function scrollToBottom(id) {\n      // $('.scrolling').scrollTop(50000);\n      var elem = document.getElementById(id);\n      if (elem) {\n        elem.scrollIntoView();\n        this.setState({ hitBottom: true, c: this.state.c + 1 });\n      } else {\n        // $('.scrolling').scrollTop(100000);\n        this.setState({ hitBottom: true, c: this.state.c + 1 });\n      }\n      // } else {\n      //   const bottom = document.getElementById('bottom');\n      //   console.log('bottom', bottom);\n      //   bottom.scrollIntoView();\n      // }\n    }\n  }, {\n    key: 'loadMore',\n    value: function loadMore(data) {\n      var _this3 = this;\n\n      // const elmnt = document.getElementById(this.state.firstId);\n      // console.log('first ID', this.state.firstId, elmnt);\n      var oldId = this.state.firstId;\n      if (this.state.hitBottom) {\n        if (data.postId) {\n          var messagesRef = _firebase2.default.database().ref('/messages/' + data.postId).orderByKey().endAt(this.state.firstKey).limitToLast(15);\n          messagesRef.once('value', function (snapshot) {\n            var newOnes = _underscore2.default.values(snapshot.val());\n            newOnes.pop();\n            var concat = newOnes.concat(_this3.state.messages);\n            var more = newOnes.length > 0;\n            var newId = newOnes.length > 0 ? newOnes[0].authorId + '' + newOnes[0].content : '';\n            _this3.setState({ messages: concat, firstKey: Object.keys(snapshot.val())[0], firstId: newId, hitBottom: false, hasMore: more });\n            // const scrollAmount = newOnes.length * 90 + 90;\n            if (newId) {\n              _this3.scrollToBottom(oldId);\n            }\n          });\n        } else {\n          console.log('missing postData load more');\n        }\n      } else {\n        console.log('oops havent hit bottom yet :/');\n      }\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      this.setState({ commentBody: e.target.value });\n    }\n  }, {\n    key: 'findEnter',\n    value: function findEnter() {\n      var _this4 = this;\n\n      (0, _jquery2.default)('#messageInput').keypress(function (event) {\n        if (event.which === 13) {\n          _this4.handleClick(_this4.props.postData.postId);\n          return false; // prevent duplicate submission\n        }\n        return null;\n      });\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(id) {\n      if (this.state.commentBody.length > 0) {\n        var user = _firebase2.default.auth().currentUser;\n        var commentBody = this.state.commentBody;\n        var split = commentBody.split(' ');\n        split.forEach(function (word, idx) {\n          if (word.length > 31) {\n            var firstHalf = word.slice(0, 32);\n            var secondHalf = word.slice(32);\n            split[idx] = firstHalf + '\\n' + secondHalf;\n          }\n        });\n        var useBody = split.join(' ');\n        var message = {\n          author: user.displayName,\n          authorId: user.uid,\n          content: useBody,\n          createdAt: new Date(),\n          authorPhoto: this.props.currentUser.pictureURL\n        };\n        this.setState({ commentBody: '' });\n        var updates = {};\n        var newMessageKey = _firebase2.default.database().ref().child('messages').push().key;\n        updates['/messages/' + id + '/' + newMessageKey] = message;\n        _firebase2.default.database().ref().update(updates);\n        var messagesCountRef = _firebase2.default.database().ref('/counts/' + this.props.postData.postId + '/count');\n        messagesCountRef.transaction(function (currentValue) {\n          return (currentValue || 0) + 1;\n        });\n      }\n      var elem = document.getElementById('messageInput');\n      elem.value = '';\n    }\n  }, {\n    key: 'startListen',\n    value: function startListen(data) {\n      var _this5 = this;\n\n      var updates = {};\n      var user = _firebase2.default.auth().currentUser;\n      updates['/members/' + this.props.postData.postId + '/' + user.uid] = true;\n      _firebase2.default.database().ref().update(updates);\n\n      if (data.postId) {\n        var messagesRef = _firebase2.default.database().ref('/messages/' + data.postId).orderByKey().limitToLast(20);\n        messagesRef.on('value', function (snapshot) {\n          if (snapshot.val()) {\n            var send = _underscore2.default.values(snapshot.val());\n            var ID = send[0].authorId + '' + send[0].content;\n            var bottomID = send[send.length - 1].authorId + '' + send[send.length - 1].content;\n            _this5.setState({ messages: send, firstKey: Object.keys(snapshot.val())[0], firstId: ID, hasMore: true, hitBottom: true });\n            if (_this5.state.c === 0 || send[send.length - 1].authorId === user.uid) {\n              _this5.scrollToBottom(bottomID);\n            }\n          } else {\n            console.log('no snapshot val :(');\n          }\n        });\n      } else {\n        console.log('missing postData');\n      }\n    }\n  }, {\n    key: 'handleClose',\n    value: function handleClose() {\n      var updates = {};\n      var user = _firebase2.default.auth().currentUser;\n      updates['/members/' + this.props.postData.postId + '/' + user.uid] = false;\n      _firebase2.default.database().ref().update(updates);\n      this.setState({ hitBottom: false, messages: [], firstKey: null, firstId: null, commentBody: '', c: 0 });\n    }\n  }, {\n    key: 'joinConversation',\n    value: function joinConversation() {\n      var user = _firebase2.default.auth().currentUser;\n      var updates = {};\n      updates['/follows/' + user.uid + '/' + this.props.currentUser.currentCommunity._id + '/' + this.props.postData.postId] = true;\n      _firebase2.default.database().ref().update(updates);\n    }\n  }, {\n    key: 'leaveConversation',\n    value: function leaveConversation() {\n      var user = _firebase2.default.auth().currentUser;\n      var updates = {};\n      updates['/follows/' + user.uid + '/' + this.props.currentUser.currentCommunity._id + '/' + this.props.postData.postId] = false;\n      _firebase2.default.database().ref().update(updates);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      return _react2.default.createElement(\n        _semanticUiReact.Modal,\n        { onOpen: function onOpen() {\n            _this6.startListen(_this6.props.postData);\n          },\n          onClose: function onClose() {\n            _this6.handleClose();\n          },\n          size: 'small',\n          basic: true,\n          trigger: _react2.default.createElement(\n            'div',\n            { className: 'commentDiv' },\n            _react2.default.createElement(\n              'span',\n              { className: 'userNum' },\n              '+',\n              this.state.members > 0 ? this.state.members : ''\n            ),\n            _react2.default.createElement(_semanticUiReact.Icon, { size: 'big', name: 'users', className: 'users' }),\n            _react2.default.createElement(\n              'span',\n              { className: 'commentNum' },\n              '+',\n              this.state.count\n            ),\n            _react2.default.createElement(_semanticUiReact.Icon, { size: 'big', name: 'comments', className: 'commentIcon' })\n          ),\n          closeIcon: 'close'\n        },\n        _react2.default.createElement(\n          _semanticUiReact.Modal.Header,\n          { className: 'modalHeader' },\n          _react2.default.createElement(_Nested_Post_Modal2.default, { postData: this.props.postData,\n            currentUser: this.props.currentUser }),\n          _react2.default.createElement(\n            'div',\n            { className: 'inModalUsers' },\n            _react2.default.createElement(\n              'span',\n              { className: 'userNum' },\n              '+',\n              this.state.members > 0 ? this.state.members : ''\n            ),\n            _react2.default.createElement(_semanticUiReact.Icon, { size: 'big', name: 'users', className: 'users', color: 'grey' })\n          ),\n          this.props.myConvoIds.indexOf(this.props.postData.postId) > -1 ? _react2.default.createElement(\n            'div',\n            { className: 'joinConversation' },\n            _react2.default.createElement(\n              _semanticUiReact.Button,\n              {\n                onClick: function onClick() {\n                  return _this6.leaveConversation();\n                },\n                circular: true,\n                id: 'joinButton',\n                animated: 'vertical' },\n              _react2.default.createElement(\n                _semanticUiReact.Button.Content,\n                null,\n                'unFollow'\n              )\n            )\n          ) : _react2.default.createElement(\n            'div',\n            { className: 'joinConversation' },\n            _react2.default.createElement(\n              _semanticUiReact.Button,\n              {\n                onClick: function onClick() {\n                  return _this6.joinConversation();\n                },\n                circular: true,\n                id: 'joinButton',\n                animated: 'vertical' },\n              _react2.default.createElement(\n                _semanticUiReact.Button.Content,\n                { hidden: true },\n                'Follow'\n              ),\n              _react2.default.createElement(\n                _semanticUiReact.Button.Content,\n                { visible: true },\n                _react2.default.createElement(_semanticUiReact.Icon, { name: 'plus' })\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _semanticUiReact.Modal.Content,\n          { scrolling: true, className: 'scrollContentClass' },\n          _react2.default.createElement(\n            _reactInfiniteScroller2.default,\n            {\n              pageStart: 0,\n              loadMore: function loadMore() {\n                _this6.loadMore(_this6.props.postData);\n              },\n              hasMore: this.state.hasMore,\n              isReverse: true,\n              threshold: 25,\n              loader: _react2.default.createElement(_semanticUiReact.Loader, { active: true, inline: 'centered' }),\n              useWindow: false\n            },\n            this.state.messages.map(function (message) {\n              return _react2.default.createElement(_Post_Comment2.default, {\n                id: message.authorId + '' + message.content,\n                key: (0, _v2.default)(),\n                name: message.author,\n                createdAt: message.createdAt,\n                content: message.content,\n                authorPhoto: message.authorPhoto,\n                currentUser: _this6.props.currentUser,\n                authorId: message.authorId\n              });\n            }),\n            _react2.default.createElement('div', { id: 'bottom' })\n          )\n        ),\n        _react2.default.createElement(\n          _semanticUiReact.Modal.Actions,\n          null,\n          _react2.default.createElement(\n            _semanticUiReact.Form,\n            null,\n            _react2.default.createElement(_semanticUiReact.TextArea, {\n              id: 'messageInput',\n              autoHeight: true,\n              placeholder: 'Give your two cents...',\n              onChange: function onChange(e) {\n                _this6.handleChange(e);_this6.findEnter();\n              },\n              rows: 3\n            })\n          )\n        )\n      );\n    }\n  }]);\n\n  return ModalInstance;\n}(_react2.default.Component);\n\nModalInstance.propTypes = {\n  postData: _propTypes2.default.object,\n  newComment: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  newLike: _propTypes2.default.func,\n  newCommentLike: _propTypes2.default.func,\n  currentUser: _propTypes2.default.object,\n  startListen: _propTypes2.default.func,\n  joinConversation: _propTypes2.default.func,\n  myConvoIds: _propTypes2.default.array\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    myConvoIds: state.conversationReducer.iDs\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    newLike: function newLike(id) {\n      return (0, _newLikeThunk2.default)(id)(dispatch);\n    },\n    joinConversation: function joinConversation(postId) {\n      return dispatch((0, _joinConversationThunk2.default)(postId));\n    },\n    newComment: function newComment(commentBody, postId) {\n      return (0, _newCommentThunk2.default)(commentBody, postId)(dispatch);\n    },\n    newCommentLike: function newCommentLike(postId, commentId) {\n      return (0, _newCommentLikeThunk2.default)(postId, commentId)(dispatch);\n    }\n  };\n};\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ModalInstance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///697\n");

/***/ })

})