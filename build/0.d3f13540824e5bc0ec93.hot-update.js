webpackHotUpdate(0,{

/***/ 690:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(17);\n\nvar _propTypes = __webpack_require__(5);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Feed_NewPost_TagPref_Container = __webpack_require__(691);\n\nvar _Feed_NewPost_TagPref_Container2 = _interopRequireDefault(_Feed_NewPost_TagPref_Container);\n\nvar _newPostThunk = __webpack_require__(729);\n\nvar _newPostThunk2 = _interopRequireDefault(_newPostThunk);\n\nvar _newTagThunk = __webpack_require__(348);\n\nvar _newTagThunk2 = _interopRequireDefault(_newTagThunk);\n\nvar _reactUploadFile = __webpack_require__(1259);\n\nvar _reactUploadFile2 = _interopRequireDefault(_reactUploadFile);\n\nvar _semanticUiReact = __webpack_require__(24);\n\nvar _superagent = __webpack_require__(1368);\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\n__webpack_require__(630);\n\nvar _reactTextareaAutosize = __webpack_require__(1254);\n\nvar _reactTextareaAutosize2 = _interopRequireDefault(_reactTextareaAutosize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // dispatches NewPost\n\n// TODO input that takes in content of post with # dropdown selector\n// input is string # is array\n// TODO post button dispatches newPost\n// userPost is the string that gets updated in reducer\n\n\nvar NewPostContainer = function (_React$Component) {\n  _inherits(NewPostContainer, _React$Component);\n\n  function NewPostContainer(props) {\n    _classCallCheck(this, NewPostContainer);\n\n    var _this = _possibleConstructorReturn(this, (NewPostContainer.__proto__ || Object.getPrototypeOf(NewPostContainer)).call(this, props));\n\n    _this.state = {\n      postBody: '',\n      postTags: [],\n      newFileName: null,\n      file: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewPostContainer, [{\n    key: 'addTags',\n    value: function addTags(tag) {\n      console.log('you are trying to add this');\n      console.log(tag);\n      var postTagsCopy = this.state.postTags.slice();\n      if (postTagsCopy.includes(tag)) {\n        var index = postTagsCopy.indexOf(tag);\n        postTagsCopy.splice(index, 1);\n        this.setState({ postTags: postTagsCopy });\n      } else {\n        postTagsCopy.push(tag);\n        this.setState({ postTags: postTagsCopy });\n      }\n    }\n  }, {\n    key: 'addNewTags',\n    value: function addNewTags(tag) {\n      this.props.newTag(tag);\n    }\n\n    // addTempTags(tags) {\n    //   const whole = [].concat(tags);\n    //   const tempTagsCopy = this.state.tempTags.slice();\n    //   const postTagsCopy = this.state.postTags.slice();\n    //   whole.forEach((tag) => {\n    //     if(!tempTagsCopy.includes(tag)) {\n    //       tempTagsCopy.push(tag);\n    //       postTagsCopy.push(tag._id);\n    //       this.setState({tempTags: tempTagsCopy, postTags: postTagsCopy});\n    //     }\n    //   });\n    // }\n\n  }, {\n    key: 'removeTag',\n    value: function removeTag(tag) {\n      var newTagsCopy = this.state.newTags.slice();\n      newTagsCopy.splice(newTagsCopy.indexOf(tag), 1);\n      this.setState({ newTags: newTagsCopy });\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      this.setState({ postBody: e.target.value });\n    }\n  }, {\n    key: 'submitPost',\n    value: function submitPost() {\n      var _this2 = this;\n\n      if (this.state.file !== '') {\n        _superagent2.default.post('/aws/upload/post').field('body', this.state.postBody ? this.state.postBody : '').field('tags', this.state.postTags ? this.state.postTags : []).field('name', this.state.newFileName ? this.state.newFileName : '').field('lastRefresh', this.props.lastRefresh).attach('attach', this.state.file).end(function (err, res) {\n          if (err) {\n            console.log(err);\n            alert('failed uploaded!');\n          }\n          console.log('resssssssssss', res);\n          _this2.props.refreshDiscover(res.body.posts, res.body.lastRefresh);\n          _this2.setState({ postBody: '', postTags: [], showTagPref: false, file: '', tempTags: [], newTags: [] });\n        });\n      } else {\n        if (this.state.postBody && this.state.file === '') {\n          this.props.newPost(this.state.postBody, this.state.postTags, this.props.lastRefresh);\n          this.setState({ postBody: '', postTags: [], showTagPref: false, file: '', tempTags: [], newTags: [] });\n        } else {\n          alert('Oops, post is empty');\n        }\n      }\n    }\n  }, {\n    key: 'handleUpload',\n    value: function handleUpload(file) {\n      console.log(file);\n      this.setState({ file: file });\n    }\n  }, {\n    key: 'changeFileName',\n    value: function changeFileName(name) {\n      this.setState({ newFileName: name });\n    }\n  }, {\n    key: 'handleKeyPress',\n    value: function handleKeyPress(event) {\n      if (event.key === 'Enter') {\n        console.log('enter press here! ');\n        console.log(event);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var optionsForUpload = {\n        baseUrl: 'xxx',\n        multiple: false,\n        didChoose: function didChoose(files) {\n          _this3.handleUpload(files[0]);\n        }\n      };\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'newPost' },\n        _react2.default.createElement(\n          'div',\n          { className: 'row newPostContent' },\n          _react2.default.createElement(_reactTextareaAutosize2.default, { id: 'textarea1',\n            value: this.state.postBody,\n            minRows: 3,\n            onChange: function onChange(e) {\n              return _this3.handleChange(e);\n            },\n            onKeyPress: function onKeyPress(e) {\n              return _this3.handleKeyPress(e);\n            }\n          })\n        ),\n        _react2.default.createElement(\n          'div',\n          { id: 'tagPrefTitleDiv' },\n          _react2.default.createElement(\n            'h3',\n            { id: 'tagPrefTitleHash' },\n            '# '\n          ),\n          _react2.default.createElement(\n            'h4',\n            { id: 'tagPrefTitle' },\n            ' add a topic'\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'row newPostTagsPref' },\n          _react2.default.createElement(_Feed_NewPost_TagPref_Container2.default, { addTags: function addTags(tag) {\n              return _this3.addTags(tag);\n            },\n            tags: this.state.postTags })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'row newPostFooter' },\n          _react2.default.createElement(\n            'div',\n            { className: 'fileUpload col-xs-6' },\n            _react2.default.createElement(_reactUploadFile2.default, {\n              style: { width: '80px', height: '40px' },\n              chooseFileButton: _react2.default.createElement(_semanticUiReact.Icon, { className: 'attachFileIcon', name: 'attach', size: 'large' }),\n              options: optionsForUpload }),\n            this.state.file !== '' ? _react2.default.createElement('input', { value: this.state.newFileName !== null ? this.state.newFileName : this.state.file.name,\n              onChange: function onChange(e) {\n                return _this3.changeFileName(e.target.value);\n              } }) : null\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xs-6' },\n            _react2.default.createElement(\n              _semanticUiReact.Button,\n              { onClick: function onClick() {\n                  return _this3.submitPost();\n                }, animated: true },\n              _react2.default.createElement(\n                _semanticUiReact.Button.Content,\n                { visible: true },\n                'create'\n              ),\n              _react2.default.createElement(\n                _semanticUiReact.Button.Content,\n                { hidden: true },\n                _react2.default.createElement(_semanticUiReact.Icon, { name: 'send' })\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return NewPostContainer;\n}(_react2.default.Component);\n\nNewPostContainer.propTypes = {\n  newPost: _propTypes2.default.func,\n  newTag: _propTypes2.default.func,\n  refreshDiscover: _propTypes2.default.func,\n  lastRefresh: _propTypes2.default.string,\n  defaultFilters: _propTypes2.default.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lastRefresh: state.discoverReducer.lastRefresh,\n    defaultFilters: state.discoverReducer.defaultFilters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    refreshDiscover: function refreshDiscover(posts, lastRefresh) {\n      return dispatch({ type: 'GET_DISCOVER_DATA_REFRESH', posts: posts, lastRefresh: lastRefresh });\n    },\n    newPost: function newPost(postBody, postTags, lastRefresh) {\n      return dispatch((0, _newPostThunk2.default)(postBody, postTags, lastRefresh));\n    },\n    newTag: function newTag(tag) {\n      return dispatch((0, _newTagThunk2.default)(tag));\n    }\n  };\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(NewPostContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///690\n");

/***/ })

})